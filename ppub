#!/usr/bin/env python3
import os
import re
from shutil import copy2
from subprocess import Popen, PIPE


def sh_stdout(cmd):
    print('Execute:', cmd)
    stdout, stderr = Popen(cmd, stdout=PIPE, stderr=PIPE, shell=True).communicate()
    if stderr:
        raise IOError
    return stdout.strip().decode()


def get_path(*path, home=True):
    script_dir = os.path.expanduser('~') if home else os.path.join(os.path.dirname(os.path.realpath(__file__)))
    return os.path.join(script_dir, *path)


img_pattern = re.compile(r'(!\[.*?\])\((.*)\)')
project_path = os.path.abspath('.')
download_path = get_path('Downloads', home=True)
scr_path = sh_stdout('defaults read com.apple.screencapture location')

os.chdir(project_path)
try:
    os.makedirs('images')
except FileExistsError:
    pass

grep_md_image = sh_stdout("git --no-pager grep -nEI '!\[.*?\]\(.*\)'").split('\n')
mod_files = []
for s in grep_md_image:
    print(s)
    target_file, line, string = s.split(':')
    mod_files.append(target_file)
    line = int(line) - 1

    filename = img_pattern.search(string).group(2)
    src = get_path(scr_path, filename)
    dst = get_path(project_path, 'images', filename)

    if os.path.exists(get_path(scr_path, filename)):
        copy2(src, dst)

        with open(target_file) as r:
            data = r.readlines()

        data[line] = img_pattern.sub(r'\1(images/\2)\n', string)
        print(string, '->', data[line])

        with open(target_file, 'w') as w:
            w.writelines(data)
    else:
        print(filename, 'is not found')


Popen('git --no-pager diff HEAD {}'.format(' '.join(mod_files)), shell=True)
